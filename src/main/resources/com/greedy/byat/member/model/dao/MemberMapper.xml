<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="com.greedy.byat.member.model.dao.MemberMapper">
 	
 	<resultMap id="memberResultMap" type="MemberDTO">
 		<id property="no" column="MEMBER_NO"/>
 		<result property="permitCode" column="PERMIT_CODE"/>
 		<result property="id" column="MEMBER_ID"/>
 		<result property="pwd" column="MEMBER_PWD"/>
 		<result property="name" column="MEMBER_NAME"/>
 		<result property="phone" column="MEMBER_PHONE"/>
 		<result property="email" column="MEMBER_EMAIL"/>
 		<result property="absenceYN" column="ABSENCE_YN"/>
 		<result property="initPwdYN" column="INIT_PWD_YN"/>
 	</resultMap>
 	
 	
 	<select id="selectEncryptedPwd" resultType="java.lang.String">
 		SELECT
 		       A.MEMBER_PWD
 		  FROM TBL_MEMBER A
 		 WHERE A.ABSENCE_YN = 'N'
 		   AND A.MEMBER_ID = #{ id }
 	
 	</select>
 
 	<select id="login" resultMap="memberResultMap">
 		SELECT
 		       A.MEMBER_NO
 		     , A.PERMIT_CODE
 		     , A.MEMBER_ID
 		     , A.MEMBER_PWD
 		     , A.MEMBER_NAME
 		     , A.MEMBER_PHONE
 		     , A.MEMBER_EMAIL
 		     , A.ABSENCE_YN
 		     , A.INIT_PWD_YN
 		  FROM TBL_MEMBER A
 		  JOIN TBL_PERMIT B ON (A.PERMIT_CODE = B.PERMIT_CODE)
 		 WHERE A.ABSENCE_YN = 'N'
 		   AND A.INIT_PWD_YN = 'N'
 		   AND A.MEMBER_ID = #{ id }
 	
 	</select>
 
 	<select id="initLogin" resultMap="memberResultMap">
 		SELECT
 		       A.MEMBER_NO
 		     , A.PERMIT_CODE
 		     , A.MEMBER_ID
 		     , A.MEMBER_PWD
 		     , A.MEMBER_NAME
 		     , A.MEMBER_PHONE
 		     , A.MEMBER_EMAIL
	      	 , A.ABSENCE_YN
 		     , A.INIT_PWD_YN
 		  FROM TBL_MEMBER A
 		  JOIN TBL_PERMIT B ON (A.PERMIT_CODE = B.PERMIT_CODE)
 		 WHERE A.ABSENCE_YN = 'N'
 		   AND A.INIT_PWD_YN = 'Y'
 		   AND A.MEMBER_ID = #{ id }
 	</select>
 	
	<select id="selectInitPasswordYN" resultType="java.lang.String">
		SELECT
		       A.INIT_PWD_YN
		  FROM TBL_MEMBER A
		 WHERE A.MEMBER_ID = #{ id }
	</select> 
		
	<select id="selectEmailById" resultType="java.lang.String">
		SELECT
		       A.MEMBER_EMAIL
		  FROM TBL_MEMBER A
		 WHERE A.ABSENCE_YN = 'N'
		   AND A.MEMBER_ID = #{ id } 
	</select>
	
	<select id="selectMemberNo" resultType="_int">
		SELECT
		       A.MEMBER_NO
		  FROM TBL_MEMBER A
		 WHERE A.ABSENCE_YN = 'N'
		   AND A.MEMBER_ID = #{ id }
	</select>
	
	<insert id="insertverification" parameterType="hashmap">
		INSERT 
		  INTO TBL_VERIFICATION A 
		( 
		   A.VERIFICATION_NUM_CODE
		 , A.VERIFICATION_NUM_KEY
		 , A.VERIFICATION_NUM_TYPE
		 , A.VERIFICATION_NUM_CREATED_DATE
		 , A.VERIFICATION_NUM_USED_DATE
		 , A.VERIFICATION_NUM_DESTRUCTION_YN
		 , A.MEMBER_NO
		)
		VALUES
		(
		   SEQ_VERIFICATION_NUM_CODE.NEXTVAL
		 , #{ verification }
		 , '멤버비밀번호찾기'
		 , SYSDATE
		 , NULL
		 , 'N'
		 , #{ no }
		)
	</insert>
	
	<insert id="insertverificationforInit" parameterType="hashmap">
		INSERT 
		  INTO TBL_VERIFICATION A 
		( 
		   A.VERIFICATION_NUM_CODE
		 , A.VERIFICATION_NUM_KEY
		 , A.VERIFICATION_NUM_TYPE
		 , A.VERIFICATION_NUM_CREATED_DATE
		 , A.VERIFICATION_NUM_USED_DATE
		 , A.VERIFICATION_NUM_DESTRUCTION_YN
		 , A.MEMBER_NO
		)
		VALUES
		(
		   SEQ_VERIFICATION_NUM_CODE.NEXTVAL
		 , #{ verification }
		 , '초기계정정보설정'
		 , SYSDATE
		 , NULL
		 , 'N'
		 , #{ no }
		)
	</insert>
	
	
	<select id="mathchVerificationNumber" resultType="java.lang.String">
		SELECT
			   A.VERIFICATION_NUM_KEY
	      FROM TBL_VERIFICATION A
	     WHERE A.VERIFICATION_NUM_DESTRUCTION_YN = 'N'
	       AND A.VERIFICATION_NUM_KEY = #{ inputVerificationNum }
	</select>
	
	<select id="mathchVerificationNumberForInit" resultType="java.lang.String">
		SELECT
			   A.VERIFICATION_NUM_KEY
	      FROM TBL_VERIFICATION A
	     WHERE A.VERIFICATION_NUM_DESTRUCTION_YN = 'N'
	       AND A.MEMBER_NO = #{ inputNo }
	       AND A.VERIFICATION_NUM_KEY = #{ inputVerificationNum }
	</select>
	
	
	<update id="updateVerficiation" parameterType="java.lang.String">
		UPDATE
		       TBL_VERIFICATION A
		   SET A.VERIFICATION_NUM_USED_DATE = (SELECT SYSDATE FROM DUAL)
		     , A.VERIFICATION_NUM_DESTRUCTION_YN = 'Y'
		 WHERE A.VERIFICATION_NUM_KEY = #{ inputVerificationNum }
		   AND A.VERIFICATION_NUM_TYPE = '멤버비밀번호찾기'   	
	</update>

	<update id="updateVerficiationForInit" parameterType="java.lang.String">
		UPDATE
		       TBL_VERIFICATION A
		   SET A.VERIFICATION_NUM_USED_DATE = (SELECT SYSDATE FROM DUAL)
		     , A.VERIFICATION_NUM_DESTRUCTION_YN = 'Y'
		 WHERE A.VERIFICATION_NUM_KEY = #{ inputVerificationNum }
		   AND A.VERIFICATION_NUM_TYPE = '초기계정정보설정'   	 
	</update>

	<update id="initialInputInfo" parameterType="hashmap">
		UPDATE
		       TBL_MEMBER A 
		   SET A.MEMBER_EMAIL = #{ email }
		     , A.MEMBER_PHONE = #{ phone }
		     , A.MEMBER_PWD = #{ password }
		     , A.INIT_PWD_YN = 'N'
		 WHERE A.MEMBER_NO = #{ no }
		   AND A.ABSENCE_YN = 'N'
	</update>

	
	<update id="updateMemberPwd" parameterType="hashmap">
		UPDATE
		       TBL_MEMBER A
		   SET A.MEMBER_PWD = #{ encodedFirstPwd }
		 WHERE A.ABSENCE_YN = 'N'
		   AND A.MEMBER_ID = #{ id } 
	</update>
	
	<select id="emailDuplicationCheck" resultType="java.lang.String">
		SELECT
		       A.MEMBER_EMAIL
		  FROM TBL_MEMBER A
		 WHERE A.MEMBER_EMAIL = #{ emailAddress	}
		   AND A.ABSENCE_YN = 'N'
	</select>
	
 </mapper>